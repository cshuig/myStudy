<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cshuig.myStudy</groupId>
    <artifactId>myStudy</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <modules>
        <module>Hibernate</module>
        <module>freemarker</module>
    </modules>

    <packaging>pom</packaging>
    <name>myStudy-parent</name>
    <url>http://maven.apache.org</url> <!-- 项目主页的URL, Maven产生的文档用 -->

    <description>
        我的学习脚印。。。
        2014/8/26  ---  距离离职 厦门同步天成有限公司 还有 4天
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit-version>4.11</junit-version>
        <hamcrest-core-version>1.3</hamcrest-core-version>
        <hamcrest-library-version>1.3</hamcrest-library-version>
        <hibernate-version>4.3.6.Final</hibernate-version>
        <hibernate-validator-version>5.1.2.Final</hibernate-validator-version>
        <springframework-version>4.0.6.RELEASE</springframework-version>
        <mysql-jdbc-version>5.1.29</mysql-jdbc-version>
        <commons-dbcp-version>1.4</commons-dbcp-version>
        <commons-lang-version>2.6</commons-lang-version>
        <commons-logging-version>1.2</commons-logging-version>
        <slf4j-version>1.7.6</slf4j-version>
        <mybatis-version>3.2.7</mybatis-version>
        <mybatis-spring-version>1.2.2</mybatis-spring-version>
        <aspectjweaver-version>1.7.4</aspectjweaver-version>
        <freemarker-version>2.3.20</freemarker-version>
        <ehcache-version>2.6.9</ehcache-version>

        <zip4j-version>1.3.2</zip4j-version>
        <maven-resources-plugin-version>2.6</maven-resources-plugin-version>
        <maven-compiler-plugin-version>3.1</maven-compiler-plugin-version>
    </properties>

    <issueManagement>
        <system>jira</system> <!-- 问题管理系统 -->
        <url>http://jira.baidu.com/cshuig</url><!-- 问题管理系统的 URL -->
    </issueManagement>

    <!-- 持续集成部分 -->
    <ciManagement>
        <system/> <!-- 持续集成系统的名字 -->
        <url/><!-- 该项目使用的持续集成系统的URL -->
        <notifiers>
            <!-- 配置一种方式，当构建出现问题时，已该方式通知用户/开发者 -->
            <notifier>
                <!-- 传送通知的路径 -->
                <type>test</type>

                <!-- 发生错误时：是否通知 -->
                <sendOnError>false</sendOnError>

                <!-- 构建失败时：是否通知 -->
                <sendOnFailure>false</sendOnFailure>

                <!-- 构建成功时：是否通知 -->
                <sendOnSuccess>false</sendOnSuccess>

                <!-- 出现警告时：是否通知 -->
                <sendOnWarning>false</sendOnWarning>
            </notifier>
        </notifiers>
    </ciManagement>

    <!-- 项目创建的年份：4位数字 -->
    <inceptionYear>2014</inceptionYear>

    <!-- 该项目使用到的相关邮件列表 -->
    <mailingLists>

    </mailingLists>

    <!-- 该项目的开发者列表 -->
    <developers>
        <developer>
            <id>cshuig</id>
            <name>chsuig</name>
            <email>cshuig@126.com</email>
            <url>http://cshuig.iteye.com/</url>
            <roles>
                <role> Project Manager</role>
            </roles>

        </developer>
    </developers>

    <!-- 构建项目需要的信息 -->
    <build>
        <!--  项目源码的目录，当构建项目时，构建系统会编译目录里面的源码 -->
        <sourceDirectory>ss</sourceDirectory>
        <!-- 项目的脚本源码目录，该目录和源码目录不同，绝大多数情况下，该目录下的内容，会被拷贝到输出目录 -->
        <scriptSourceDirectory>ss</scriptSourceDirectory>
        <!-- 项目单元测试的源码目录，当测试时，构建系统会编译此目录的源码 -->
        <testSourceDirectory>ss</testSourceDirectory>

        <!-- 被编译后的class文件存储目录 -->
        <outputDirectory>d:/myStudy/app</outputDirectory>
        <!-- 被编译后的 测试代码的 class文件存储目录 -->
        <testOutputDirectory>d:/myStudy/test</testOutputDirectory>



        <!-- 构建后的文件名字 -->
        <finalName>${artifactId}</finalName>
    </build>

    <repositories>
        <repository>
            <id>oschina</id>
            <name>oschina</name>
            <url>http://maven.oschina.net/content/groups/public/</url>
        </repository>
    </repositories>

    <!--  继承该项目的所有子项目的默认依赖信息，这部分的依赖不会立即被解析，而是当子项目引用里面声明的依赖时，才会被解析
        子项目只需要 groupId 和 artifact 就可以
     -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${springframework-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${springframework-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${springframework-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${springframework-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${springframework-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${springframework-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${springframework-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${springframework-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${springframework-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${springframework-version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis-version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring-version}</version>
            </dependency>

            <!-- Hibernate4 -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate-version}</version>
            </dependency>
            <!-- for JPA, use hibernate-entitymanager instead of hibernate-core -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate-version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator-version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-jdbc-version}</version>
            </dependency>

            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>${commons-dbcp-version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang-version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging-version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectjweaver-version}</version>
            </dependency>

            <!-- 打包、解包工具 -->
            <dependency>
                <groupId>net.lingala.zip4j</groupId>
                <artifactId>zip4j</artifactId>
                <version>${zip4j-version}</version>
            </dependency>

            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache-core</artifactId>
                <version>${ehcache-version}</version>
            </dependency>

            <dependency>
                <groupId>com.googlecode.ehcache-spring-annotations</groupId>
                <artifactId>ehcache-spring-annotations</artifactId>
                <version>1.2.0</version>
            </dependency>

            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker-version}</version>
            </dependency>


            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>7.0</version>

                <!--
                   依赖作用范围：
                    complie ： 默认的范围，用于编译
                    provided ：类似编译
                    runtime  ：在运行时才会使用到
                    test     ：在执行测试时才会用到
                    system   ：
                    systemPath  ：
                    optional   ：当项目自身被依赖，标志依赖是否支持传递
                 -->
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit-version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest-core-version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest-library-version}</version>
                <scope>compile</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>